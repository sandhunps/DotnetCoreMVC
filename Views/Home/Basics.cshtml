

@using MVC.Models
@{
    //string title = "Title from Razor";
    Person person = new Person()
    {
        Age = 20,
        Name = "Sandhu",
        Gender = Gender.Male,
        Dob = new DateTime(1995, 06, 15)

    };
    List<int> list = new List<int>() { 1, 2, 3 };

    // Html.Raw()
    string alert = $"<script>alert('{list.Count} people found')</script>";
}

@functions{
    // Local function
    double? GetAge(DateTime? dob)
    {
        if (dob is not null)
        {
            return Math.Round((DateTime.Now - dob.Value).TotalDays / 365.25);
        }
        else
        {
            return null; ;
        }
    }
}

<!DOCTYPE html>
<html>
<head>
    <title>@ViewData["pageTitle"]</title>
    <meta charset="utf-8" />
</head>
<body>
    <h1>Hi Form MVC</h1>
    <h2>@person.Name</h2>

    @*Calling laert html code like below will only print the string, as
        Razor engine sanitize the value in strng anprint as text*@u

    @alert

    @*unsing Html.Raw()*@

    @Html.Raw(alert);



    @*If*@
    @if (person.Age > 18)
    {
        @*Inserting Static Text*@
        @:Static Text 1
        <text>Statc Text 2</text>
        <div>Above 18 +</div>
    }
    else
    {
        <div>Not 18</div>
    }

    @*Switch*@

    @switch (person.Gender)
    {
        case Gender.Male:
            <p>male</p>;
            break;
        case Gender.Female:
            <p>Female</p>;
            break;
        case Gender.Other:
            <p>LGBTQ+</p>;
            break;

    }

    @*Foreach*@
    @foreach (int item in list)
    {
        <li>@item</li>
    }

    @*For*@
    @for (int i = 1; i < 5; i++)
    {
        <ul>@i</ul>
    }

    @{
        // Age from function
        var age = GetAge(person.Dob);
        <h2>age is : @age</h2>
    }
</body>


</html>

